//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HTTP.ViewService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionTO", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary1")]
    [System.SerializableAttribute()]
    public partial class TransactionTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ViewService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLatestTransaction", ReplyAction="http://tempuri.org/IService1/GetLatestTransactionResponse")]
        HTTP.ViewService.TransactionTO GetLatestTransaction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLatestTransaction", ReplyAction="http://tempuri.org/IService1/GetLatestTransactionResponse")]
        System.Threading.Tasks.Task<HTTP.ViewService.TransactionTO> GetLatestTransactionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvestorsPage", ReplyAction="http://tempuri.org/IService1/GetInvestorsPageResponse")]
        string GetInvestorsPage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvestorsPage", ReplyAction="http://tempuri.org/IService1/GetInvestorsPageResponse")]
        System.Threading.Tasks.Task<string> GetInvestorsPageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTransactionsPage", ReplyAction="http://tempuri.org/IService1/GetTransactionsPageResponse")]
        string GetTransactionsPage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTransactionsPage", ReplyAction="http://tempuri.org/IService1/GetTransactionsPageResponse")]
        System.Threading.Tasks.Task<string> GetTransactionsPageAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : HTTP.ViewService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<HTTP.ViewService.IService1>, HTTP.ViewService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HTTP.ViewService.TransactionTO GetLatestTransaction() {
            return base.Channel.GetLatestTransaction();
        }
        
        public System.Threading.Tasks.Task<HTTP.ViewService.TransactionTO> GetLatestTransactionAsync() {
            return base.Channel.GetLatestTransactionAsync();
        }
        
        public string GetInvestorsPage() {
            return base.Channel.GetInvestorsPage();
        }
        
        public System.Threading.Tasks.Task<string> GetInvestorsPageAsync() {
            return base.Channel.GetInvestorsPageAsync();
        }
        
        public string GetTransactionsPage() {
            return base.Channel.GetTransactionsPage();
        }
        
        public System.Threading.Tasks.Task<string> GetTransactionsPageAsync() {
            return base.Channel.GetTransactionsPageAsync();
        }
    }
}
